## Start timer when movement detected downstairs
- alias: movement downstairs start timer
  id: movement_downstairs_start_timer
  trigger:
  - platform: state
    entity_id: !secret coolcam_motion_sensor_2
    to: "on"
  condition:
    condition: and
    conditions:
    - condition: or
      conditions:
      # - condition: state
      #   entity_id: sun.sun
      #   state: "below_horizon"
      - condition: sun
        after: sunset
        after_offset: "-02:00:00"
      - condition: sun
        before: sunrise
        before_offset: "+01:00:00"
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.presence_house
        state: Home
      - condition: state
        entity_id: input_select.presence_house
        state: Home Guests
      - condition: state
        entity_id: input_select.presence_house
        state: Away Guests
  action:
  - service: timer.cancel
    entity_id: timer.light_downstairs
  - service: timer.start
    entity_id: timer.light_downstairs
    data_template:
      duration: >
        {{ states('input_number.light_duration')|int|multiply(60)|timestamp_custom('%X',false) }}

# When timer is started, turn on light
- alias: Timer started light_downstairs
  id: 'timer_started_light_downstairs'
  trigger:
  - platform: event
    event_type: timer.started
    event_data:
      entity_id: timer.light_downstairs
  action:
  - service: light.turn_on
    data:
      entity_id: light.tradfri_bulb_2
      transition: 2
      brightness: 255
      kelvin: 3000

# When timer is finished, if sensor is "on", reset timer
- alias: Timer reset light_downstairs
  id: 'timer_reset_light_downstairs'
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.light_downstairs
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.keep_lights_on
      state: "off"
    - condition: state
      entity_id: !secret coolcam_motion_sensor_2
      state: "on"
  action:
  - service: timer.cancel
    entity_id: timer.light_downstairs
  - service: timer.start
    entity_id: timer.light_downstairs
    data_template:
      duration: >
        {{ states('input_number.light_duration')|int|multiply(60)|timestamp_custom('%X',false) }}

# When timer is finished, if sensor is "off", turn off light
- alias: Timer finished light_downstairs
  id: 'timer_finished_light_downstairs'
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.light_downstairs
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.keep_lights_on
      state: "off"
    - condition: state
      entity_id: !secret coolcam_motion_sensor_2
      state: "off"
  action:
  - service: timer.cancel
    entity_id: timer.light_downstairs
  - service: light.turn_off
    data:
      entity_id: light.tradfri_bulb_2
